services:
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - stack_sphere_network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - stack_sphere_network

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "9000:80"
    networks:
      - stack_sphere_network

  core-service:
    container_name: core-service
    env_file: ./core-service/.env
    build:
      context: ./core-service
      dockerfile: Dockerfile.dev
    depends_on:
      - kafka
    restart: always
    ports:
      - "9100:9100"
    networks:
      - stack_sphere_network

  upload-service:
    container_name: upload-service
    env_file: ./upload-service/.env # Fixed `env_file`
    build:
      context: ./upload-service
      dockerfile: Dockerfile.dev
    depends_on:
      - kafka
    restart: always
    ports:
      - "9200:9200"
    networks:
      - stack_sphere_network

networks:
  stack_sphere_network:
    driver: bridge
